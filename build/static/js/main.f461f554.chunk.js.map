{"version":3,"sources":["Header.js","Environment.js","Card.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","HTTP","axios","create","baseURL","Card","state","styles","locations","restaurants","handleSubmit","event","preventDefault","selectedStyle","target","value","selectedLocation","get","then","res","setState","data","catch","error","console","log","styleList","this","map","style","slug","name","term_id","locationList","location","restaurantList","restaurant","dangerouslySetInnerHTML","__html","id","onSubmit","type","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAUeA,EARA,WACX,OACI,iCACI,oBAAIC,UAAU,eAAd,qC,wCCKGC,E,OARFC,EAAMC,OAAO,CACtBC,QAAQ,sBCASC,E,4MAElBC,MAAQ,CACHC,OAAQ,GACRC,UAAW,GACXC,YAAa,I,EAkBjBC,aAAe,SAAEC,GAEbA,EAAMC,iBAEN,IAAIC,EAAgBF,EAAMG,OAAOP,OAAOQ,MACpCC,EAAmBL,EAAMG,OAAON,UAAUO,MAG9Cd,EAAKgB,IAAL,gDAAkDD,EAAlD,kBAA4EH,IAE3EK,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVX,YAAaU,EAAIE,UAGxBC,OAAM,SAAAC,GACHC,QAAQC,IAAK,oCAAqCF,O,uDA/B1D,WAAqB,IAAD,OAChBtB,EAAKgB,IAAI,4BAERC,MAAK,SAAAC,GACF,EAAKC,SAAS,CACVb,OAAQY,EAAIE,KAAKd,OACjBC,UAAWW,EAAIE,KAAKb,eAG3Bc,OAAM,SAAAC,GACHC,QAAQC,IAAK,oCAAqCF,Q,oBA0B1D,WAEI,IAAIG,EAAYC,KAAKrB,MAAMC,OAAOqB,KAC9B,SAAAC,GAAK,OACL,wBAA8Bd,MAAQc,EAAMC,KAA5C,SACMD,EAAME,MADEF,EAAMG,YAKpBC,EAAeN,KAAKrB,MAAME,UAAUoB,KACpC,SAAAM,GAAQ,OACR,wBAAiCnB,MAAQmB,EAASJ,KAAlD,SACMI,EAASH,MADDG,EAASF,YAKvBG,EAAiBR,KAAKrB,MAAMG,YAAYmB,KACxC,SAAAQ,GAAU,OACV,oBAA0BC,wBAAyB,CAAEC,OAAQF,EAAWL,OAA9DK,EAAWG,OAGzB,OAEI,sBAAKvC,UAAU,OAAf,UAEI,qBAAKA,UAAU,UAAf,SACMmC,IAGN,uBAAMnC,UAAU,YAAYwC,SAAWb,KAAKjB,aAA5C,UAEI,qBAAKV,UAAU,WAAf,SACI,oDACI,wBAAQ+B,KAAK,SAASQ,GAAG,SAASxB,MAAQY,KAAKrB,MAAMuB,MAArD,SAA+DH,SAIvE,qBAAK1B,UAAU,WAAf,SACI,uDACI,wBAAQ+B,KAAK,YAAYQ,GAAG,YAAYxB,MAAQY,KAAKrB,MAAM4B,SAA3D,SAAwED,SAIhF,wBAAQQ,KAAK,SAASF,GAAG,SAASvC,UAAU,SAA5C,4B,GAvFc0C,aCSnBC,MATf,WACE,OACE,sBAAK3C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKS4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f461f554.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <header>\n            <h1 className=\"header-title\">Where Are We Eating?</h1>\n        </header>\n    );\n}\n\nexport default Header;","import axios from \"axios\";\n\nconst HTTP = axios.create({\n    baseURL: `http://eat.local/`\n\n    //baseURL: baseURL.url\n\n});\n\n\nexport default HTTP;","import React, { Component } from 'react';\nimport HTTP from './Environment.js';\n\nexport default class Card extends Component {\n    \n   state = {\n        styles: [],\n        locations: [],\n        restaurants: []\n    }\n\n    componentDidMount() {\n        HTTP.get(\"wp-json/ijab/v1/options/\")\n        // axios.get(`http://eat.local/wp-json/ijab/v1/options/`)\n        .then(res => {\n            this.setState({\n                styles: res.data.styles,\n                locations: res.data.locations\n            })\n        })\n        .catch(error => {\n            console.log( 'Error fetching and parsing data: ', error );\n        });\n\n    }\n\n    handleSubmit = ( event ) => {\n\n        event.preventDefault();\n\n        let selectedStyle = event.target.styles.value;\n        let selectedLocation = event.target.locations.value;\n\n\n        HTTP.get(`wp-json/ijab/v1/restaurants/?location=${selectedLocation}&style=${selectedStyle}`)\n        // axios.get(`http://eat.local/wp-json/ijab/v1/restaurants/?location=${selectedLocation}&style=${selectedStyle}`)\n        .then(res => {\n            this.setState({\n                restaurants: res.data\n            })\n        })\n        .catch(error => {\n            console.log( 'Error fetching and parsing data: ', error );\n        });\n        \n    }\n    \n    render() {\n    \n        let styleList = this.state.styles.map(\n            style => \n            <option key={ style.term_id } value={ style.slug }>\n                { style.name }\n            </option>\n        );\n\n        let locationList = this.state.locations.map(\n            location => \n            <option key={ location.term_id } value={ location.slug }>\n                { location.name }\n            </option>\n        );\n\n        let restaurantList = this.state.restaurants.map(\n            restaurant => \n            <h2 key={ restaurant.id } dangerouslySetInnerHTML={{ __html: restaurant.name }}></h2>\n        );\n\n        return (\n\n            <div className=\"card\">\n\n                <div className=\"results\">\n                    { restaurantList }\n                </div>\n\n                <form className=\"selecting\" onSubmit={ this.handleSubmit }>\n                            \n                    <div className=\"selector\">\n                        <label>Select a style:\n                            <select name=\"styles\" id=\"styles\" value={ this.state.style }>{ styleList }</select>\n                        </label>\n                    </div>\n\n                    <div className=\"selector\">\n                        <label>Select a location:\n                            <select name=\"locations\" id=\"locations\" value={ this.state.location }>{ locationList }</select>\n                        </label>\n                    </div>\n                \n                    <button type=\"submit\" id=\"submit\" className=\"accent\">Load</button>\n\n                </form>\n\n            </div>\n\n        );\n\n    }\n    \n}\n","import Header from './Header.js';\nimport Card from './Card.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Card />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}